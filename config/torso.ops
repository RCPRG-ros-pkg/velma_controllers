import("rtt_ros");
import("rtt_roscomm");
import("rtt_rosparam");

//ros.import("conman");
//ros.import("lwr_fri");
ros.import("velma_hardware");
//ros.import("oro_joint_state_publisher");
ros.import("controller_common");
ros.import("velma_controller");
//ros.import("rtt_cartesian_trajectory_msgs");

//------------------------------------------------------------------------------
//-- Hardware interface
//------------------------------------------------------------------------------

loadComponent("VT", "VelmaTorso")
setActivity("VT", 0.001, 6, ORO_SCHED_RT)
VT.loadService("rosparam");
VT.rosparam.getAll();
VT.configure();

//------------------------------------------------------------------------------
//-- Velma controller
//------------------------------------------------------------------------------

loadComponent("HT", "HeadTrajectory")
setActivity("HT", 0.001, 6, ORO_SCHED_RT)
HT.loadService("rosparam");
HT.rosparam.getAll();
HT.configure();

loadComponent("TJ", "TorsoTeleopJoy")
setActivity("TJ", 0.001, 6, ORO_SCHED_RT)
TJ.loadService("rosparam");
TJ.rosparam.getAll();
TJ.configure();



loadComponent("Jc", "VectorConcate2");
setActivity("Jc", 0.001, 6, ORO_SCHED_RT)
connect("HT.FakeJointPositionCommand", "Jc.In0", ConnPolicy());
connect("HT.JointPositionCommand", "Jc.In1", ConnPolicy());
connect("TJ.TorsoJointPositionCommand", "Jc.In0", ConnPolicy());
connect("TJ.HeadJointPositionCommand", "Jc.In1", ConnPolicy());
connect("Jc.Out", "VT.JointPositionCommand", ConnPolicy());
Jc.configure();
Jc.start();

connect("TJ.TorsoJointTorqueCommand", "VT.JointTorqueCommand", ConnPolicy());

//------------------------------------------------------------------------------
//-- ROS Diagnostics
//------------------------------------------------------------------------------

//------------------------------------------------------------------------------
//-- ROS Command interface
//------------------------------------------------------------------------------
//loadComponent("CartTrjA", "CartesianTrajectoryAction");
//setActivity("CartTrjA", 0.01, 1, ORO_SCHED_RT);

//connect("CartTrjA.CartesianTrajectoryCommand", "PoseInt.CartesianTrajectoryCommand", ConnPolicy());

stream("TJ.Joy", ros.comm.topic("/joy"));

//CartTrjA.configure();

//------------------------------------------------------------------------------
//stream("JntPub.joint_state", ros.comm.topic("/joint_states"));

VT.start();
//HT.start();
TJ.start();

/*
export void vstart()
   CImp.start()
   JntLimit.start()
   PoseInt.start()
end
*/

